package Graphflow;

import java.util.HashMap;
import java.util.Map;

public class Constants {
    public static Integer[][][] DECOMPOSITIONS4 = new Integer[][][] {
        {
            {0, 1, 1, 2, 1, 3, 1, 4},
            {0, 1, 1, 2, 1, 3, 1, 5},
            {0, 1, 1, 2, 1, 3, 1, 6},
            {0, 1, 1, 2, 1, 4, 1, 5},
            {0, 1, 1, 2, 1, 4, 1, 6},
            {0, 1, 1, 2, 1, 5, 1, 6},
            {0, 1, 1, 3, 1, 4, 1, 5},
            {0, 1, 1, 3, 1, 4, 1, 6},
            {0, 1, 1, 3, 1, 5, 1, 6},
            {0, 1, 1, 4, 1, 5, 1, 6},
            {1, 2, 1, 3, 1, 4, 1, 5},
            {1, 2, 1, 3, 1, 4, 1, 6},
            {1, 2, 1, 3, 1, 5, 1, 6},
            {1, 2, 1, 4, 1, 5, 1, 6},
            {1, 3, 1, 4, 1, 5, 1, 6}
        },
        {
//            {0, 1, 1, 3, 2, 3, 2, 5},
//            {1, 3, 2, 3, 2, 5, 4, 5},
//            {2, 3, 2, 5, 4, 5, 4, 6}
        },
        {
//            {0, 1, 0, 5, 2, 3, 3, 5},
//            {0, 1, 0, 5, 4, 5, 4, 6},
//            {2, 3, 3, 5, 4, 5, 4, 6},
//            {0, 1, 0, 5, 3, 5, 4, 5},
//            {0, 5, 2, 3, 3, 5, 4, 5},
//            {0, 5, 3, 5, 4, 5, 4, 6}
        },
        {// fork24
            // star
            {0, 4, 2, 4, 4, 5, 4, 6},
            {0, 4, 3, 4, 4, 5, 4, 6},
            {2, 4, 3, 4, 4, 5, 4, 6},
            {0, 4, 2, 4, 3, 4, 4, 5},
            {0, 4, 2, 4, 3, 4, 4, 6},
            // fork
            {0, 1, 0, 4, 3, 4, 4, 5},
            {0, 1, 0, 4, 3, 4, 4, 6},
            {0, 1, 0, 4, 2, 4, 3, 4},
            {0, 1, 0, 4, 4, 5, 4, 6},
            {0, 1, 0, 4, 2, 4, 4, 5},
            {0, 1, 0, 4, 2, 4, 4, 6}
        },
        {// pi
            // path
            {0, 1, 0, 3, 3, 6, 4, 6},
            {0, 2, 0, 3, 3, 6, 4, 6},
            {0, 1, 0, 3, 3, 6, 5, 6},
            {0, 2, 0, 3, 3, 6, 5, 6},
            // fork
            {0, 3, 3, 6, 4, 6, 5, 6},
            {0, 1, 0, 2, 0, 3, 3, 6}
        },
        {// fork33
            // path
            {0, 1, 1, 2, 2, 5, 3, 5},
            {0, 1, 1, 2, 2, 5, 4, 5},
            {0, 1, 1, 2, 2, 5, 5, 6},
            // fork
            {1, 2, 2, 5, 3, 5, 4, 5}, // with star
            {1, 2, 2, 5, 3, 5, 5, 6},
            {1, 2, 2, 5, 4, 5, 5, 6}, // with star
            // star
            {2, 5, 3, 5, 4, 5, 5, 6}
        },
        {// fork34
            // path
            {0, 1, 1, 2, 2, 5, 3, 5},
            {0, 1, 1, 2, 2, 5, 4, 5},
            {0, 1, 1, 2, 2, 5, 5, 6},
            {0, 1, 1, 2, 2, 5, 5, 7},
            // fork
            {1, 2, 2, 5, 3, 5, 4, 5},
            {1, 2, 2, 5, 3, 5, 5, 6},
            {1, 2, 2, 5, 3, 5, 5, 7},
            {1, 2, 2, 5, 4, 5, 5, 6},
            {1, 2, 2, 5, 4, 5, 5, 7},
            {1, 2, 2, 5, 5, 6, 5, 7},
            // star
            {2, 5, 3, 5, 4, 5, 5, 6},
            {2, 5, 3, 5, 4, 5, 5, 7},
            {2, 5, 3, 5, 5, 6, 5, 7},
            {2, 5, 4, 5, 5, 6, 5, 7},
            {3, 5, 4, 5, 5, 6, 5, 7}
        },
        {// bifork
            // path
            {0, 1, 1, 3, 3, 6, 4, 6},
            {0, 1, 1, 3, 3, 6, 5, 6},
            {0, 1, 1, 3, 3, 6, 6, 7},
            {0, 1, 1, 3, 3, 6, 6, 8},
            {1, 2, 1, 3, 3, 6, 4, 6},
            {1, 2, 1, 3, 3, 6, 5, 6},
            {1, 2, 1, 3, 3, 6, 6, 7},
            {1, 2, 1, 3, 3, 6, 6, 8},
            // fork
            {0, 1, 1, 2, 1, 3, 3, 6},
            {1, 3, 3, 6, 4, 6, 5, 6},
            {1, 3, 3, 6, 4, 6, 6, 7},
            {1, 3, 3, 6, 4, 6, 6, 8},
            {1, 3, 3, 6, 5, 6, 6, 7},
            {1, 3, 3, 6, 5, 6, 6, 8},
            {1, 3, 3, 6, 6, 7, 6, 8},
            // star
            {3, 6, 4, 6, 5, 6, 6, 7},
            {3, 6, 4, 6, 5, 6, 6, 8},
            {3, 6, 4, 6, 6, 7, 6, 8},
            {3, 6, 5, 6, 6, 7, 6, 8},
            {4, 6, 5, 6, 6, 7, 6, 8}
        }
    };

    public static Integer[][][] DECOMPOSITIONS3 = new Integer[][][] {
        {
            {0, 1, 1, 2, 1, 3}, {0, 1, 1, 2, 1, 4}, {0, 1, 1, 2, 1, 5}, {0, 1, 1, 2, 1, 6},
            {0, 1, 1, 3, 1, 4}, {0, 1, 1, 3, 1, 5}, {0, 1, 1, 3, 1, 6},
            {0, 1, 1, 4, 1, 5}, {0, 1, 1, 4, 1, 6},
            {0, 1, 1, 5, 1, 6},
            {1, 2, 1, 3, 1, 4}, {1, 2, 1, 3, 1, 5}, {1, 2, 1, 3, 1, 6},
            {1, 2, 1, 4, 1, 5}, {1, 2, 1, 4, 1, 6},
            {1, 2, 1, 5, 1, 6},
            {1, 3, 1, 4, 1, 5}, {1, 3, 1, 4, 1, 6}, {1, 3, 1, 5, 1, 6},
            {1, 4, 1, 5, 1, 6}
        },
        {
//            {1, 3, 2, 3, 2, 5}, {2, 3, 2, 5, 4, 5}
        },
        {
//            {0, 5, 3, 5, 4, 5},
//            {0, 1, 0, 5, 3, 5}, {0, 1, 0, 5, 4, 5},
//            {0, 5, 2, 3, 3, 5}, {2, 3, 3, 5, 4, 5},
//            {0, 5, 4, 5, 4, 6}, {3, 5, 4, 5, 4, 6},
        },
        {
            {0, 4, 2, 4, 3, 4}, {0, 4, 2, 4, 4, 5}, {0, 4, 2, 4, 4, 6},
            {0, 4, 3, 4, 4, 5}, {0, 4, 3, 4, 4, 6},
            {2, 4, 3, 4, 4, 5}, {2, 4, 3, 4, 4, 6},
            {0, 4, 4, 5, 4, 6}, {2, 4, 4, 5, 4, 6}, {3, 4, 4, 5, 4, 6},
            {0, 1, 0, 4, 2, 4}, {0, 1, 0, 4, 3, 4}, {0, 1, 0, 4, 4, 5}, {0, 1, 0, 4, 4, 6}
        },
        {
            {0, 1, 0, 2, 0, 3}, {3, 6, 4, 6, 5, 6},
            {0, 1, 0, 3, 3, 6}, {0, 2, 0, 3, 3, 6},
            {0, 3, 3, 6, 4, 6}, {0, 3, 3, 6, 5, 6}
        },
        {
            // path
            {0, 1, 1, 2, 2, 5},
            {1, 2, 2, 5, 3, 5},
            {1, 2, 2, 5, 4, 5},
            {1, 2, 2, 5, 5, 6},
            // star
            {2, 5, 3, 5, 4, 5},
            {2, 5, 3, 5, 5, 6},
            {2, 5, 4, 5, 5, 6},
            {3, 5, 4, 5, 5, 6}
        },
        {// fork34
            // path
            {0, 1, 1, 2, 2, 5},
            {1, 2, 2, 5, 3, 5},
            {1, 2, 2, 5, 4, 5},
            {1, 2, 2, 5, 5, 6},
            {1, 2, 2, 5, 5, 7},
            // star
            {2, 5, 3, 5, 4, 5},
            {2, 5, 3, 5, 5, 6},
            {2, 5, 3, 5, 5, 7},
            {2, 5, 4, 5, 5, 6},
            {2, 5, 4, 5, 5, 7},
            {2, 5, 5, 6, 5, 7},
            {3, 5, 4, 5, 5, 6},
            {3, 5, 4, 5, 5, 7},
            {3, 5, 5, 6, 5, 7},
            {4, 5, 5, 6, 5, 7}
        },
        {// bifork
            // path
            {0, 1, 1, 3, 3, 6},
            {1, 2, 1, 3, 3, 6},
            {1, 3, 3, 6, 4, 6},
            {1, 3, 3, 6, 5, 6},
            {1, 3, 3, 6, 6, 7},
            {1, 3, 3, 6, 6, 8},
            // star
            {0, 1, 1, 2, 1, 3},
            {3, 6, 4, 6, 5, 6},
            {3, 6, 4, 6, 6, 7},
            {3, 6, 4, 6, 6, 8},
            {3, 6, 5, 6, 6, 7},
            {3, 6, 5, 6, 6, 8},
            {3, 6, 6, 7, 6, 8},
            {4, 6, 5, 6, 6, 7},
            {4, 6, 5, 6, 6, 8},
            {4, 6, 6, 7, 6, 8},
            {5, 6, 6, 7, 6, 8}
        }
    };

    public static Integer[][][] DECOMPOSITIONS2 = new Integer[][][] {
        {
            {0, 1, 1, 2}, {0, 1, 1, 3}, {0, 1, 1, 4}, {0, 1, 1, 5}, {0, 1, 1, 6},
            {1, 2, 1, 3}, {1, 2, 1, 4}, {1, 2, 1, 5}, {1, 2, 1, 6},
            {1, 3, 1, 4}, {1, 3, 1, 5}, {1, 3, 1, 6},
            {1, 4, 1, 5}, {1, 4, 1, 6},
            {1, 5, 1, 6}
        },
        {},
        {
//            {0, 1, 0, 5}, {0, 5, 3, 5}, {2, 3, 3, 5}, {0, 5, 4, 5}, {3, 5, 4, 5}, {4, 5, 4, 6}
        },
        {// fork24
            {0, 4, 2, 4}, {0, 4, 3, 4}, {0, 4, 4, 5}, {0, 4, 4, 6},
            {2, 4, 3, 4}, {2, 4, 4, 5}, {2, 4, 4, 6},
            {3, 4, 4, 5}, {3, 4, 4, 6},
            {4, 5, 4, 6},
            {0, 1, 0, 4},
        },
        {// pi
            {0, 1, 0, 2}, {0, 1, 0, 3}, {0, 2, 0, 3},
            {0, 3, 3, 6},
            {3, 6, 4, 6}, {3, 6, 5, 6}, {4, 6, 5, 6}
        },
        {
            {0, 1, 1, 2}, {1, 2, 2, 5},
            {2, 5, 3, 5}, {2, 5, 4, 5}, {2, 5, 5, 6},
            {3, 5, 4, 5}, {3, 5, 5, 6},
            {4, 5, 5, 6}
        },
        {// fork34
            {0, 1, 1, 2}, {1, 2, 2, 5},
            {2, 5, 3, 5}, {2, 5, 4, 5}, {2, 5, 5, 6}, {2, 5, 5, 7},
            {3, 5, 4, 5}, {3, 5, 5, 6}, {3, 5, 5, 7},
            {4, 5, 5, 6}, {4, 5, 5, 7},
            {5, 6, 5, 7}
        },
        {// bifork
            {0, 1, 1, 2},
            {0, 1, 1, 3}, {1, 2, 1, 3},
            {1, 3, 3, 6},
            {3, 6, 4, 6}, {3, 6, 5, 6}, {3, 6, 6, 7}, {3, 6, 6, 8},
            {4, 6, 5, 6}, {4, 6, 6, 7}, {4, 6, 6, 8},
            {5, 6, 6, 7}, {5, 6, 6, 8},
            {6, 7, 6, 8}
        }
    };

    public static Integer[][][] DECOMPOSITIONS1 = new Integer[][][] {
        {},{},{},
        {// fork24
            {0, 1}, {0, 4}, {2, 4}, {3, 4}, {4, 5}, {4, 6}
        },
        {// pi
            {0, 1}, {0, 2}, {0, 3}, {3, 6}, {4, 6}, {5, 6}
        },
        {},
        {// fork34
            {0, 1}, {1, 2}, {2, 5}, {3, 5}, {4, 5}, {5, 6}, {5, 7}
        },
        {// bifork
            {0, 1}, {1, 2}, {1, 3}, {3, 6}, {4, 6}, {5, 6}, {6, 7}, {6, 8}
        }
    };

    public static final Map<String, String> forkEdge2dir = new HashMap<String, String>() {{
       put("0-4;2-4;3-4", "1-1-1");
       put("0-4;2-4;4-5", "1-1-0");
       put("0-4;2-4;4-6", "1-1-0");
       put("0-4;3-4;4-5", "1-1-0");
       put("0-4;3-4;4-6", "1-1-0");
       put("2-4;3-4;4-5", "1-1-0");
       put("2-4;3-4;4-6", "1-1-0");
       put("0-4;4-5;4-6", "1-0-0");
       put("2-4;4-5;4-6", "1-0-0");
       put("3-4;4-5;4-6", "1-0-0");
       put("0-1;0-4;2-4", "0-1-1");
       put("0-1;0-4;3-4", "0-1-1");
       put("0-1;0-4;4-5", "0-1-0");
       put("0-1;0-4;4-6", "0-1-0");
       put("0-1", "0");
       put("0-4", "1");
       put("2-4", "1");
       put("3-4", "1");
       put("4-5", "0");
       put("4-6", "0");
    }};

    public static final Map<String, String> piEdge2dir = new HashMap<String, String>() {{
        put("0-1;0-3;3-6", "0-0-0");
        put("0-2;0-3;3-6", "0-0-0");
        put("0-3;3-6;4-6", "1-1-1");
        put("0-3;3-6;5-6", "1-1-1");
        put("0-1", "0");
        put("0-2", "0");
        put("4-6", "1");
        put("5-6", "1");
    }};

    // Catalogue
    public static final int C_STAR = 0;
    public static final int C_PATH = 1;
    public static final int C_FORK = 2;
    public static final int C_ALL = 3;
    public static final int C_SINGLE_LABEL = 4;

    // Query
    public static final int FORK24 = 3;
    public static final int PI = 4;
    public static final int FORK33 = 5;
    public static final int FORK34 = 6;
    public static final int BIFORK = 7;

    // Uniformity
    public static final int FORWARD = 0;
    public static final int BACKWARD = 1;

    // Partitioning
    public static final int HASH = 10;
    public static final int DEG = 11;

    public static final int[][][] FORK_OF_FORK_Q_DIR_GROUPS = new int[][][]
        {
            {{FORWARD, BACKWARD, BACKWARD, FORWARD}},
            {{FORWARD, BACKWARD, BACKWARD, BACKWARD}},
            {{FORWARD, BACKWARD, FORWARD, BACKWARD}},
            {{FORWARD, BACKWARD, FORWARD, FORWARD}}
        };

    public static final int[][][] STAR_OF_FORK_Q_DIR_GROUPS = new int[][][]
        {
            {{BACKWARD, BACKWARD, BACKWARD, FORWARD}},
            {{BACKWARD, BACKWARD, FORWARD, FORWARD}},
            {{BACKWARD, BACKWARD, FORWARD, BACKWARD}},
            {{BACKWARD, FORWARD, FORWARD, BACKWARD}}
        };

    public static final int[][][] FORK_OF_PI_Q_DIR_GROUPS = new int[][][]
        {
            {{BACKWARD, BACKWARD, BACKWARD, BACKWARD}},
            {{FORWARD, FORWARD, FORWARD, FORWARD}}
        };

    public static final int[][][] PATH_OF_PI_Q_DIR_GROUPS = new int[][][]
        {
            {{FORWARD, FORWARD, FORWARD, BACKWARD}},
            {{BACKWARD, BACKWARD, BACKWARD, FORWARD}}
        };
}
